{"version":3,"sources":["components/header/Header.js","components/filter/Filter.js","components/plotifyGraph/PlotifyGraph.js","components/pivotTable/PivotTable.js","components/datasourceInfo/DatasourceInfo.js","App.js","registerServiceWorker.js","index.js"],"names":["AppHeader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","className","href","target","rel","aria-hidden","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","aria-current","React","Component","aggregations","value","label","marginBottom","display","fontWeight","Filter","dimenssion","aggregation","measure","option","field","_this2","defineProperty","setTimeout","onFilterChange","_this3","_this$state","_this$props","dimenssions","measures","react","key","style","margin","react_select_esm","name","isSearchable","onChange","e","handleChange","options","PlotifyGraph","handleJsonChange","newJSON","json","filters","get","setLoader","prepareData","console","log","flag","isLoader","plotUrl","loadCsv","color","i","Math","floor","random","path","Plotly","d3","csv","err","rows","concat","object","hasOwnProperty","element","isNaN","parseInt","push","map","o","data","timeSeries","unpack","row","groupedData","chain","groupBy","item","toPairs","currentItem","zipObject","groupedItems","series","type","mode","x","Date","y","items","line","getRandomColor","plotJSON","layout","title","xaxis","rangeselector","buttons","count","step","stepmode","_this4","components_filter_Filter","Async_default","loadOptions","getPlots","placeholder","handleNewPlot","ref","cache","position","left","top","react_loader_spinner_default","height","width","react_plotly_default","config","displayModeBar","responsive","onInitialized","PlotlyRenderers","createPlotlyRenderers","Plot","PivotTableComponent","marginTop","length","PivotTableUI_default","assign","s","renderers","TableRenderers","DatasourceInfo","App","isPlotify","header_Header","components_datasourceInfo_DatasourceInfo","components_plotifyGraph_PlotifyGraph","pivotTable_PivotTable","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6b2eae07.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap';\r\n\r\nimport './Header.css';\r\n\r\nclass AppHeader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"header-top\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <a href=\"logo\" className=\"logo-img text-white\" >Gaphify\r\n            </a>\r\n              </div>\r\n              <div className=\"col-md-8 d-flex align-items-center justify-content-end\">\r\n                <ul className=\"top no-style-list d-flex mb-0 \">\r\n                  <li>\r\n                    <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"documentation  text-white text-uppercase font-weight-bold\">\r\n                      <i className=\"custom-color fa fa-clone mr-2\" aria-hidden=\"true\"></i>\r\n                      Documentation</a></li>\r\n                  <li><a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"Setting text-white text-uppercase\"><i className=\"mr-2 custom-color fa fa-cog\" aria-hidden=\"true\"></i>Settings</a></li>\r\n                  <li className=\"border-icon\"><a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\" className=\" text-white text-uppercase font-weight-bold\">\r\n                    <i className=\"icon-bell fa fa-bell\" aria-hidden=\"true\"></i></a></li>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                    <DropdownToggle nav caret>\r\n                      option\r\n                </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>\r\n                        Account\r\n                  </DropdownItem>\r\n\r\n\r\n                      <DropdownItem>\r\n                        Logout\r\n                  </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n\r\n\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n\r\n\r\n\r\n        <header className=\"header-inner\">\r\n          <div className=\"container-fluid\">\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 p-0\">\r\n                <ul className=\"navigation d-inline-flex align-items-center no-style-list m-0 p-0\">\r\n                  <li className=\"workplace text-uppercase\" >All Workspaces</li>\r\n                  <li className=\"ml-5  mt-2 \"><a className=\"selected active  text-uppercase font-weight-bold\" href=\"#\" aria-current=\"page\">Pivot</a></li>\r\n                  <li className=\"ml-5 \"><a className=\"text-uppercase  text-white \" href=\"#\" aria-current=\"page\">Data Resources</a></li>\r\n                  <li className=\"ml-5 \"><a className=\"text-uppercase  text-white \" href=\"#\" aria-current=\"page\">Materilized View</a></li>\r\n                  <li className=\"ml-5 \"><a className=\"text-uppercase  text-white \" href=\"#\" aria-current=\"page\">Outputs</a></li>\r\n                  <li className=\"ml-5 \"><a className=\"text-uppercase  text-white \" href=\"#\" aria-current=\"page\">Clusters</a></li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n        </header>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppHeader;","import React, { Fragment } from 'react';\r\nimport AsyncSelect from 'react-select/lib/Async';\r\nimport Select from 'react-select';\r\n\r\nimport './Filter.css';\r\n\r\nconst aggregations = [\r\n  { value: 'count', label: 'Count' },\r\n  { value: 'sum', label: 'Sum' },\r\n  { value: 'avarage', label: 'Avarage' },\r\n  { value: 'min', label: 'Min' },\r\n  { value: 'max', label: 'Max' }\r\n];\r\nconst label = {\r\n  marginBottom: '8px',\r\n  display: 'block',\r\n  fontWeight: '500'\r\n};\r\n\r\nclass Filter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dimenssion: null,\r\n      aggregation: null,\r\n      measure: null\r\n    }\r\n  }\r\n  handleChange(option, field) {\r\n    this.setState({\r\n      [field]: option\r\n    });\r\n    setTimeout(()=>{\r\n      this.props.onFilterChange(this.state);\r\n    },0);\r\n  }\r\n\r\n\r\n  render() {\r\n    const { dimenssion, aggregation, measure } = this.state;\r\n    const { dimenssions,measures } = this.props;\r\n    return (\r\n      <Fragment key=\"graphify-filter\">\r\n        <div className=\"control-item\" style={{ margin: '20px 0' }}>\r\n          <label style={label}>Dimension</label>\r\n          <Select\r\n            name=\"dimenssion\"\r\n            value={dimenssion}\r\n            isSearchable={true}\r\n            onChange={(e) => this.handleChange(e, 'dimenssion')}\r\n            options={dimenssions}\r\n          />\r\n        </div>\r\n        <div className=\"control-item\" style={{ margin: '20px 0' }}>\r\n          <label style={label}>Aggregation</label>\r\n          <Select\r\n            name=\"aggregation\"\r\n            value={aggregation}\r\n            onChange={(e) => this.handleChange(e, 'aggregation')}\r\n            options={aggregations}\r\n          />\r\n        </div>\r\n        <div className=\"control-item\" style={{ margin: '20px 0' }}>\r\n          <label style={label}>Measure</label>\r\n          <Select\r\n            name=\"measure\"\r\n            value={measure}\r\n            onChange={(e) => this.handleChange(e, 'measure')}\r\n            options={measures}\r\n          />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Filter;\r\n","/* global Plotly:true */\r\n\r\nimport React from 'react';\r\n\r\nimport AsyncSelect from 'react-select/lib/Async';\r\nimport SplitPane from 'react-split-pane';\r\n\r\n//import createPlotlyComponent from 'react-plotly.js/factory'\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport '../../styles/Resizer.css';\r\n\r\n/* JSON Editor styling */\r\nimport '../../styles/autocomplete.css';\r\nimport '../../styles/contextmenu.css';\r\nimport '../../styles/jsoneditor.css';\r\nimport '../../styles/menu.css';\r\nimport '../../styles/reset.css';\r\nimport '../../styles/searchbox.css';\r\nimport { chain, zipObject, get } from 'lodash';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport './PlotifyGraph.css';\r\nimport Filter from '../filter/Filter';\r\n\r\nclass PlotifyGraph extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleJsonChange = this.handleJsonChange.bind(this);\r\n    this.state = {\r\n      json: null,\r\n      plotUrl: '',\r\n      dimenssions: [],\r\n      measures: [],\r\n      measure: '',\r\n      dimenssion: '',\r\n      isLoader: false\r\n    };\r\n    //this.loadCsv('./data/india.csv');\r\n    this.loadCsv('./data/twitter_output1.csv');\r\n  }\r\n\r\n  handleJsonChange = newJSON => {\r\n    this.setState({ json: newJSON });\r\n  }\r\n\r\n  getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }\r\n\r\n  loadCsv(path) {\r\n    Plotly\r\n      .d3\r\n      .csv(path, (err, rows) => {\r\n        if (err) {\r\n          console.log(`Datasource CS file ${path} has not loaded`, err);\r\n          return;\r\n        }\r\n        let dimenssions = [];\r\n        let measures = [];\r\n        const object = rows[0];\r\n        for (const key in object) {\r\n          if (object.hasOwnProperty(key)) {\r\n            const element = object[key];\r\n            if (isNaN(parseInt(element))) {\r\n              dimenssions.push(key);\r\n            } else {\r\n              measures.push(key);\r\n            }\r\n          }\r\n        }\r\n        dimenssions = dimenssions.map((o) => {\r\n          return {\r\n            label: o,\r\n            value: o\r\n          };\r\n        });\r\n        measures = measures.map((o) => {\r\n          return {\r\n            label: o,\r\n            value: o\r\n          };\r\n        });\r\n        this.setState({\r\n          data: rows,\r\n          dimenssions: dimenssions,\r\n          measures: measures\r\n        });\r\n      });\r\n  }\r\n\r\n  prepareData() {\r\n    const timeSeries = [];\r\n    const unpack = (rows, key) => {\r\n      return rows.map(function (row) { return row[key]; });\r\n    };\r\n    const groupedData = chain(this.state.data)\r\n      .groupBy((item) => {\r\n        return item[this.state.dimenssion];\r\n      }).toPairs()\r\n      .map((currentItem) => {\r\n        return zipObject([this.state.dimenssion, \"items\"], currentItem);\r\n      })\r\n      .value();\r\n    for (const key in groupedData) {\r\n      if (groupedData.hasOwnProperty(key)) {\r\n        const groupedItems = groupedData[key];\r\n        const series = {\r\n          type: \"scatter\",\r\n          mode: \"lines\",\r\n          name: groupedItems[this.state.dimenssion],\r\n          x: new Date(),\r\n          y: unpack(groupedItems.items, this.state.measure),\r\n          line: { color: this.getRandomColor() }\r\n        };\r\n        timeSeries.push(series);\r\n      }\r\n    }\r\n    const layout = {\r\n      title: 'Basic Time Series',\r\n      xaxis: {\r\n        rangeselector: {\r\n          buttons: [\r\n            {\r\n              count: 15,\r\n              label: '15min',\r\n              step: 'minute',\r\n              stepmode: 'backward'\r\n            },\r\n            {\r\n              count: 30,\r\n              label: '30min',\r\n              step: 'minute',\r\n              stepmode: 'backward'\r\n            },\r\n            {\r\n              count: 45,\r\n              label: '45min',\r\n              step: 'minute',\r\n              stepmode: 'backward'\r\n            },\r\n            {\r\n              count: 1,\r\n              label: '1h',\r\n              step: 'hour',\r\n              stepmode: 'backward'\r\n            },\r\n            {\r\n              count: 1,\r\n              label: '1d',\r\n              step: 'day',\r\n              stepmode: 'backward'\r\n            },\r\n            {\r\n              count: 1,\r\n              label: '1m',\r\n              step: 'month',\r\n              stepmode: 'backward'\r\n            },\r\n            {\r\n              count: 6,\r\n              label: '6m',\r\n              step: 'month',\r\n              stepmode: 'backward'\r\n            },\r\n            {\r\n              count: 1,\r\n              label: '1y',\r\n              step: 'year',\r\n              stepmode: 'backward'\r\n            },\r\n            { step: 'all' }\r\n          ]\r\n        },\r\n        title: 'Time Series',\r\n        type: 'date',\r\n        //rangeslider: {range: ['2015-02-17', '2019-09-16']},\r\n      }\r\n    };\r\n\r\n    //Plotly.newPlot('myDiv', data, layout, { showSendToCloud: true });\r\n\r\n    const plotJSON = {\r\n      data: timeSeries,\r\n      layout: layout\r\n    };\r\n\r\n    this.setState({\r\n      json: plotJSON\r\n    });\r\n  }\r\n\r\n  onFilterChange = (filters) => {\r\n    this.setState({\r\n      measure: get(filters, 'measure.value', ''),\r\n      dimenssion: get(filters, 'dimenssion.value', '')\r\n    });\r\n\r\n    if (filters.measure && filters.dimenssion) {\r\n      this.setLoader(true);\r\n      setTimeout(() => {\r\n        this.prepareData();\r\n      }, 0);\r\n    }\r\n    console.log('filters', filters);\r\n  }\r\n\r\n  setLoader = (flag) => {\r\n    this.setState({\r\n      isLoader: flag\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    let searchPlaceholder = 'Search charts on plot.ly by topic -- e.g. \"GDP\"';\r\n    const plotInputPlaceholder = 'Link to plot JSON';\r\n\r\n    return (\r\n      <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <div className='controls-panel'>\r\n                <h1>Filters</h1>\r\n                <Filter dimenssions={this.state.dimenssions} measures={this.state.measures} onFilterChange={this.onFilterChange} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <div className='controls-panel'>\r\n                <AsyncSelect\r\n                  name=\"plot-search-bar\"\r\n                  loadOptions={this.getPlots}\r\n                  placeholder={searchPlaceholder}\r\n                  onChange={this.handleNewPlot}\r\n                  ref=\"plotSearchBar\"\r\n                  cache={false}\r\n                  className={'no-select'}\r\n                />\r\n\r\n              </div>\r\n              {\r\n                this.state.isLoader && <div style={{ position: 'absolute', left: '45%', top: '35%' }}>\r\n                  <Loader\r\n                    type=\"ThreeDots\"\r\n                    color=\"#00BFFF\"\r\n                    height=\"100\"\r\n                    width=\"100\"\r\n                  />\r\n                </div>\r\n              }\r\n              {this.state.json && <Plot\r\n                data={this.state.json.data}\r\n                layout={this.state.json.layout}\r\n                config={{ displayModeBar: true, responsive: true }}\r\n                style={{ width: '100%' }}\r\n                onInitialized={() => this.setLoader(false)}\r\n              />}\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlotifyGraph;\r\n","/* global Plotly:true */\r\n\r\nimport './PivotTable.css';\r\nimport React from 'react';\r\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\r\nimport 'react-pivottable/pivottable.css';\r\nimport TableRenderers from 'react-pivottable/TableRenderers';\r\nimport Plot from 'react-plotly.js';\r\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\r\n\r\n\r\n// create Plotly renderers via dependency injection\r\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\r\n\r\nclass PivotTableComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    };\r\n    this.loadCsv('./data/twitter_output1.csv');\r\n  }\r\n\r\n\r\n  loadCsv(path) {\r\n    Plotly\r\n      .d3\r\n      .csv(path, (err, rows) => {\r\n        if (err) {\r\n          console.log(`Datasource CS file ${path} has not loaded`, err);\r\n          return;\r\n        }\r\n        console.log(rows);\r\n        this.setState({\r\n          data: rows\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    return (\r\n      <div style={{marginTop:'30px'}}>\r\n        <h1>PivotTable</h1>\r\n        {\r\n          data.length > 0 &&\r\n          <PivotTableUI\r\n            data={data}\r\n            onChange={s => this.setState(s)}\r\n            renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\r\n            {...this.state}\r\n          />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PivotTableComponent;","import React from 'react';\r\nimport './DatasourceInfo.css';\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap';\r\n\r\n\r\nclass DatasourceInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"datasource\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <h1><span>Twitter Datasoure</span></h1>\r\n                <p> <a href=\"#\"\r\n                  target=\"_blank\" rel=\"noopener noreferrer\">Learn more about Data Source Discovery.</a></p>\r\n              </div><div className=\"col-md-8\">\r\n                <ul className=\"definition-list no-style-list d-flex align-items-center justify-content-end\">\r\n                  <li><strong><span>Cluster</span></strong><span className=\"limited\">Running</span></li>\r\n                  <li><strong>Total Events</strong><span>70</span></li>\r\n                  <li><strong>Parse Errors</strong><span>0</span></li>\r\n                  <UncontrolledDropdown inNavbar>\r\n                    <DropdownToggle nav caret>\r\n                      Add output\r\n                </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>\r\n                        Add Dashboard\r\n                  </DropdownItem>\r\n                      <DropdownItem>\r\n                        Add Materialized View\r\n                  </DropdownItem>\r\n                      <DropdownItem>\r\n                        Archive Data Source\r\n                  </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr></hr>\r\n        <ul className=\"tabs-react no-style-list mb-3 p-0\">\r\n          <li><a>Schema</a></li>\r\n          <li><a>Samples</a></li>\r\n          <li><a>Parse Errors</a></li>\r\n          <li><a>Properties</a></li>\r\n          <li><a>Used By (0)</a></li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatasourceInfo;","/* global Plotly:true */\n\nimport React from 'react';\nimport './App.css';\nimport AppHeader from './components/header/Header.js';\nimport PlotifyGraph from './components/plotifyGraph/PlotifyGraph';\nimport PivotTableComponent from './components/pivotTable/PivotTable';\nimport DatasourceInfo from './components/datasourceInfo/DatasourceInfo';\n\n\n\n\n//const Plot = createPlotlyComponent(Plotly);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPlotify: false\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <AppHeader></AppHeader>\n        <DatasourceInfo></DatasourceInfo>\n        <div className=\"container-fluid\">\n          <PlotifyGraph></PlotifyGraph>\n        </div>\n        <div className=\"container-fluid\">\n          <PivotTableComponent></PivotTableComponent>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}