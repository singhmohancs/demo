{"version":3,"sources":["components/ReactJSONEditor.react.js","components/filter/Filter.js","components/header/Header.js","components/datasourceInfo/DatasourceInfo.js","App.js","registerServiceWorker.js","index.js"],"names":["ReactJSONEditor","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","json","cloneDeep","editorCreated","editor","editorRef","createJSONEditorComponent","container","_this2","onChangeWrapper","_this$props","onChange","onEditable","onError","onModeChange","_this$props2","escapeUnicode","sortObjectKeys","history","mode","_this$props3","name","schema","search","indentation","theme","get","JSONEditor","set","expandAll","newState","setState","nextProps","isEqual","prevProps","prevState","plotUrl","destroy","_this3","_this$props4","className","height","width","react_default","a","createElement","id","ref","style","React","Component","defaultProps","options","value","label","aggregations","marginBottom","display","fontWeight","Filter","dimenssion","aggregation","measure","option","field","defineProperty","_this$state","dimenssions","react","key","margin","react_select_esm","isSearchable","e","handleChange","Async_default","AppHeader","toggle","bind","assertThisInitialized","isOpen","href","class","target","rel","aria-hidden","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","aria-current","DatasourceInfo","App","handleJsonChange","newJSON","loadCsv","path","Plotly","d3","csv","err","rows","console","log","concat","headerKeys","keys","map","o","unpack","row","plotJSON","data","type","x","y","line","color","layout","title","header_Header","components_datasourceInfo_DatasourceInfo","index_esm","split","minSize","defaultSize","components_filter_Filter","loadOptions","getPlots","placeholder","handleNewPlot","cache","react_plotly_default","config","displayModeBar","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2a9d06fc.chunk.js","sourcesContent":["// React JSON Editor wrapper \n// JSON Editor by Jos de Jong - https://github.com/josdejong/jsoneditor\n// Based on post by Hassan Khan - https://github.com/josdejong/jsoneditor/issues/274#issuecomment-263986071\n// Wrapper By Ian Grossberg - https://gist.github.com/yoiang/6f82874f4fd8fc1a37631dc9cad27172\n\nimport React from 'react';\n\nimport JSONEditor from 'jsoneditor';\nimport PropTypes from 'prop-types';\n\nimport cloneDeep from 'lodash.clonedeep';\nimport isEqual from 'lodash.isequal';\n// import './jsoneditor.css';\n\n// Ref: https://github.com/josdejong/jsoneditor/blob/master/docs/api.md\n// TODO: ace\n// TODO: ajv\n// TODO: modes\n\n// TODO: onChange, onEditable, onError\nexport default class ReactJSONEditor extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            json: cloneDeep(props.json),\n            editorCreated: false\n        };\n\n        this.editor    = null;\n        this.editorRef = null;\n    }\n\n    get json() {\n        return this.state.json;\n    }\n\n    componentDidMount() {\n        \n        if (this.editorRef) {\n            this.createJSONEditorComponent(this.editorRef);\n        }\n    }\n\n    createJSONEditorComponent(container) {\n        if (!container) {\n            return; \n        }\n\n        const { editorCreated } = this.state;\n\n        if (editorCreated) {\n            return;\n        }\n\n        const { onChange, onEditable, onError, onModeChange } = this.props;\n        const { escapeUnicode, sortObjectKeys, history } = this.props;\n        const { mode } = this.props;\n        const { name, schema, search, indentation, theme } = this.props;\n\n        let onChangeWrapper;\n        if (onChange) {\n\n            onChangeWrapper = () => {\n                onChange(this.editor.get());\n            };\n        }\n        this.editor = new JSONEditor(container, {\n            onChange: onChangeWrapper, \n\n            onEditable,\n            onError,\n            onModeChange,\n\n            escapeUnicode,\n            sortObjectKeys,\n            history,\n\n            mode,\n\n            name,\n            schema,\n            search,\n            indentation,\n            theme\n        });\n        this.editor.set(this.json);\n        this.editor.expandAll();\n\n        const newState = this.state;\n        newState.editorCreated = true;\n        this.setState(newState);\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        const json = this.json;\n        if (!isEqual(json, nextProps.json)) {\n            const newState = this.state;\n            newState.json = cloneDeep(nextProps.json);\n            this.setState(newState);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (!isEqual(prevProps.plotUrl, this.props.plotUrl)) {\n            // New plot; load new plot JSON\n            this.editor.set(this.json);\n            this.editor.expandAll();\n        }\n    }\n\n    componentWillUnmount() {\n\n        const { editorCreated } = this.state;\n        if (editorCreated) {\n            \n            this.editor.destroy();\n\n            const newState = this.state;\n            newState.editorCreated = false;\n            this.setState(newState);\n        }\n    }\n\n    handleChange() {\n        // const newState = this.state;\n        // newState.json = this.editor.get();\n        // this.setState(newState);\n    }\n\n    render() {\n        const { className, height, width } = this.props;\n        \n        const refGrabber = (ref) => { \n            this.editorRef = ref; \n        }\n\n        return (\n            <div\n                id='jsonEditor'\n                className={className}\n                ref={refGrabber}\n                style={ { height, width } }\n            />\n        );\n    }\n}\n\nReactJSONEditor.propTypes = {\n    className: PropTypes.string,\n\n    json : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]).isRequired,\n\n    height : PropTypes.number,\n    width  : PropTypes.number,\n\n    onChange: PropTypes.func,\n\n    onEditable: PropTypes.func,\n\n    onError: PropTypes.func, \n\n    onModeChange: PropTypes.func,\n\n    escapeUnicode: PropTypes.bool, \n\n    sortObjectKeys: PropTypes.bool,\n\n    history: PropTypes.bool,\n\n    mode: PropTypes.oneOf([\n        'tree', 'view', 'form', 'code', 'text'\n    ]).isRequired,\n\n    name: PropTypes.string,\n\n    schema: PropTypes.object,\n\n    search: PropTypes.bool,\n\n    indentation: PropTypes.number,\n\n    theme: PropTypes.string\n};\n\nReactJSONEditor.defaultProps = {\n    escapeUnicode: false,\n    sortObjectKeys: false,\n    history: true,\n\n    mode: 'tree',\n\n    search: true,\n\n    indentation: 4\n}\n","import React, { Fragment } from 'react';\r\nimport AsyncSelect from 'react-select/lib/Async';\r\nimport Select from 'react-select';\r\n\r\nimport './Filter.css';\r\n\r\nconst options = [\r\n  { value: 'chocolate', label: 'Chocolate' },\r\n  { value: 'strawberry', label: 'Strawberry' },\r\n  { value: 'vanilla', label: 'Vanilla' }\r\n];\r\n\r\nconst aggregations = [\r\n  { value: 'count', label: 'Count' },\r\n  { value: 'sum', label: 'Sum' },\r\n  { value: 'avarage', label: 'Avarage' },\r\n  { value: 'min', label: 'Min' },\r\n  { value: 'max', label: 'Max' }\r\n];\r\nconst label = {\r\n  marginBottom: '8px',\r\n  display: 'block',\r\n  fontWeight: '500'\r\n};\r\n\r\nclass Filter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dimenssion: null,\r\n      aggregation: null,\r\n      measure: null\r\n    }\r\n  }\r\n  handleChange(option, field) {\r\n    this.setState({\r\n      [field]: option\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { dimenssion, aggregation, measure } = this.state;\r\n    const { dimenssions } = this.props;\r\n    return (\r\n      <Fragment key=\"graphify-filter\">\r\n        <div className=\"control-item\" style={{ margin: '20px 0' }}>\r\n          <label style={label}>Dimension</label>\r\n          <Select\r\n            name=\"dimenssion\"\r\n            value={dimenssion}\r\n            isSearchable={true}\r\n            onChange={(e) => this.handleChange(e, 'dimenssion')}\r\n            options={dimenssions}\r\n          />\r\n        </div>\r\n        <div className=\"control-item\" style={{ margin: '20px 0' }}>\r\n          <label style={label}>Aggregation</label>\r\n          <Select\r\n            name=\"aggregation\"\r\n            value={aggregation}\r\n            onChange={(e) => this.handleChange(e, 'aggregation')}\r\n            options={aggregations}\r\n          />\r\n        </div>\r\n        <div className=\"control-item\" style={{ margin: '20px 0' }}>\r\n          <label style={label}>Measure</label>\r\n          <AsyncSelect\r\n            name=\"measure\"\r\n            value={measure}\r\n            onChange={(e) => this.handleChange(e, 'measure')}\r\n            options={options}\r\n          />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Filter;\r\n","import React from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap';\r\n\r\nimport './Header.css';\r\n\r\nclass AppHeader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"header-top\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <a href=\"logo\" className=\"logo-img text-white\" >Gaphify\r\n            </a>\r\n              </div>\r\n              <div className=\"col-md-8 d-flex align-items-center justify-content-end\">\r\n                <ul class=\"top no-style-list d-flex mb-0 \">\r\n                  <li><a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"documentation  text-white text-uppercase font-weight-bold\">\r\n                    <i class=\"custom-color fa fa-clone mr-2\" aria-hidden=\"true\"></i>\r\n                    Documentation</a></li>\r\n                  <li><a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"Setting text-white text-uppercase\"><i class=\"mr-2 custom-color fa fa-cog\" aria-hidden=\"true\"></i>Settings</a></li>\r\n                  <li class=\"border-icon\"><a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\" className=\" text-white text-uppercase font-weight-bold\">\r\n                    <i class=\"icon-bell fa fa-bell\" aria-hidden=\"true\"></i></a></li>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                    <DropdownToggle nav caret>\r\n                      option\r\n                </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>\r\n                        Account\r\n                  </DropdownItem>\r\n\r\n               \r\n                      <DropdownItem>\r\n                        Logout\r\n                  </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n\r\n\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n\r\n\r\n\r\n        <header className=\"header-inner\">\r\n          <div className=\"container-fluid\">\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 p-0\">\r\n                <ul className=\"navigation d-inline-flex align-items-center no-style-list m-0 p-0\">\r\n                  <li className=\"workplace text-uppercase\" >All Workspaces</li>\r\n                  <li className=\"ml-5  mt-2 \"><a className=\"selected active  text-uppercase font-weight-bold\" href=\"#\" aria-current=\"page\">Integrate</a></li>\r\n                  <li className=\"ml-5 \"><a className=\"text-uppercase  text-white \" href=\"#\" aria-current=\"page\">Data Resources</a></li>\r\n                  <li className=\"ml-5 \"><a className=\"text-uppercase  text-white \" href=\"#\" aria-current=\"page\">Materilized View</a></li>\r\n                  <li className=\"ml-5 \"><a className=\"text-uppercase  text-white \" href=\"#\" aria-current=\"page\">Outputs</a></li>\r\n                  <li className=\"ml-5 \"><a className=\"text-uppercase  text-white \" href=\"#\" aria-current=\"page\">Clusters</a></li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n        </header>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './DatasourceInfo.css';\r\nimport {\r\n\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap';\r\n\r\n\r\nclass DatasourceInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"datasource\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <h1><span>india</span>\r\n\r\n                </h1>\r\n                <p> <a href=\"#\"\r\n                  target=\"_blank\" rel=\"noopener noreferrer\">Learn more about Data Source Discovery.</a></p>\r\n              </div><div className=\"col-md-8\">\r\n                <ul className=\"definition-list no-style-list d-flex align-items-center justify-content-end\">\r\n                  <li><strong><span>Cluster</span></strong><span className=\"limited\">Running</span></li>\r\n                  <li><strong>Total Events</strong><span>70</span></li>\r\n                  <li><strong>Parse Errors</strong><span>0</span></li>\r\n\r\n\r\n                  <UncontrolledDropdown  inNavbar>\r\n                    <DropdownToggle nav caret>\r\n                      Add output\r\n                </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>\r\n                      Add Dashboard\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                  Add Materialized View\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                  Archive Data Source\r\n                  </DropdownItem>\r\n\r\n                     \r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n      </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <hr></hr>\r\n        <ul className=\"tabs-react no-style-list mb-3 p-0\">\r\n\r\n          <li><a>Schema</a></li>\r\n          <li><a>Samples</a></li>\r\n          <li><a>Parse Errors</a></li>\r\n          <li><a>Properties</a></li>\r\n          <li><a>Used By (0)</a></li>\r\n        </ul>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatasourceInfo;","/* global Plotly:true */\n\nimport React from 'react';\n\nimport fetch from 'isomorphic-fetch';\nimport ReactJSONEditor from './components/ReactJSONEditor.react.js';\nimport AsyncSelect from 'react-select/lib/Async';\nimport SplitPane from 'react-split-pane';\nimport Filter from './components/filter/Filter.js';\n\n//import createPlotlyComponent from 'react-plotly.js/factory'\nimport Plot from 'react-plotly.js';\nimport './App.css';\nimport './styles/Resizer.css';\n\n\n/* JSON Editor styling */\nimport './styles/autocomplete.css';\nimport './styles/contextmenu.css';\nimport './styles/jsoneditor.css';\nimport './styles/menu.css';\nimport './styles/reset.css';\nimport './styles/searchbox.css';\nimport AppHeader from './components/header/Header.js';\nimport DatasourceInfo from './components/datasourceInfo/DatasourceInfo.js';\n\n\n\n//const Plot = createPlotlyComponent(Plotly);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleJsonChange = this.handleJsonChange.bind(this);\n    this.state = {\n      json: null,\n      plotUrl: '',\n      dimenssions : []\n    };\n    this.loadCsv('./data/finance-charts-apple.csv');\n  }\n\n  handleJsonChange = newJSON => {\n    this.setState({ json: newJSON });\n  }\n\n  loadCsv(path) {\n    Plotly.d3.csv(path, (err, rows) => {\n      if(err){\n        console.log(`Datasource CS file ${path} has not loaded`, err);\n        return;\n      }\n      let headerKeys = Object.keys(rows[0]);\n      headerKeys = headerKeys.map((o)=>{\n        return {\n          label:o,\n          value:o\n        };\n      });\n      console.log(`Datasource CS file ${path} has loaded`, rows[0]);\n      const unpack = (rows, key) => {\n        return rows.map(function (row) { return row[key]; });\n      };\n      const trace1 = {\n        type: \"scatter\",\n        mode: \"lines\",\n        name: 'AAPL High',\n        x: unpack(rows, 'Date'),\n        y: unpack(rows, 'AAPL.High'),\n        line: { color: '#17BECF' }\n      }\n      const trace2 = {\n        type: \"scatter\",\n        mode: \"lines\",\n        name: 'AAPL Low',\n        x: unpack(rows, 'Date'),\n        y: unpack(rows, 'AAPL.Low'),\n        line: { color: '#7F7F7F' }\n      }\n      const data = [trace1, trace2];\n      const layout = {\n        title: 'Basic Time Series',\n      };\n\n      //Plotly.newPlot('myDiv', data, layout, { showSendToCloud: true });\n\n      const plotJSON = {\n        data: data,\n        layout: layout\n      };\n\n      this.setState({\n        json: plotJSON,\n        dimenssions : headerKeys\n      });\n    });\n\n  }\n\n\n\n  render() {\n    let searchPlaceholder = 'Search charts on plot.ly by topic -- e.g. \"GDP\"';\n    const plotInputPlaceholder = 'Link to plot JSON';\n    let footnoteStyle = {\n      fontSize: '12px',\n      textAlign: 'left',\n      width: '300px',\n      overflowWrap: 'break-word',\n      margin: '10px'\n    }\n    return (\n      <div className=\"App\">\n      <AppHeader></AppHeader>\n      <div className=\"container-fluid\">\n      <DatasourceInfo></DatasourceInfo>\n      <SplitPane split=\"vertical\" minSize={100} defaultSize={400}>\n          <div>\n            <div className='controls-panel'>\n              <h1>Filters</h1>\n              <Filter dimenssions={this.state.dimenssions} />\n            </div>\n          </div>\n          <div>\n            <div className='controls-panel'>\n              <AsyncSelect\n                name=\"plot-search-bar\"\n                loadOptions={this.getPlots}\n                placeholder={searchPlaceholder}\n                onChange={this.handleNewPlot}\n                ref=\"plotSearchBar\"\n                cache={false}\n                className={'no-select'}\n              />\n              \n            </div>\n            {this.state.json && <Plot\n              data={this.state.json.data}\n              layout={this.state.json.layout}\n              config={{ displayModeBar: false }}\n              style={{ width: '80%' }}\n            />}\n          </div>\n        </SplitPane>\n     \n      </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}