{"version":3,"sources":["components/filter/Filter.js","components/header/Header.js","components/datasourceInfo/DatasourceInfo.js","App.js","registerServiceWorker.js","index.js"],"names":["aggregations","value","label","marginBottom","display","fontWeight","Filter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dimenssion","aggregation","measure","option","field","_this2","setState","defineProperty","setTimeout","onFilterChange","_this3","_this$state","_this$props","dimenssions","measures","react_default","a","createElement","react","key","className","style","margin","react_select_esm","name","isSearchable","onChange","e","handleChange","options","React","Component","AppHeader","toggle","bind","assertThisInitialized","isOpen","href","target","rel","aria-hidden","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","aria-current","DatasourceInfo","App","handleJsonChange","newJSON","json","plotUrl","loadCsv","path","Plotly","d3","csv","err","rows","console","log","concat","object","hasOwnProperty","element","isNaN","parseInt","push","map","o","unpack","row","plotJSON","data","type","mode","x","y","line","color","layout","title","xaxis","rangeselector","buttons","count","step","stepmode","filters","header_Header","components_datasourceInfo_DatasourceInfo","index_esm","split","minSize","defaultSize","components_filter_Filter","Async_default","loadOptions","getPlots","placeholder","handleNewPlot","ref","cache","react_plotly_default","config","displayModeBar","responsive","width","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d8502f5e.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport AsyncSelect from 'react-select/lib/Async';\r\nimport Select from 'react-select';\r\n\r\nimport './Filter.css';\r\n\r\nconst aggregations = [\r\n  { value: 'count', label: 'Count' },\r\n  { value: 'sum', label: 'Sum' },\r\n  { value: 'avarage', label: 'Avarage' },\r\n  { value: 'min', label: 'Min' },\r\n  { value: 'max', label: 'Max' }\r\n];\r\nconst label = {\r\n  marginBottom: '8px',\r\n  display: 'block',\r\n  fontWeight: '500'\r\n};\r\n\r\nclass Filter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dimenssion: null,\r\n      aggregation: null,\r\n      measure: null\r\n    }\r\n  }\r\n  handleChange(option, field) {\r\n    this.setState({\r\n      [field]: option\r\n    });\r\n    setTimeout(()=>{\r\n      this.props.onFilterChange(this.state);\r\n    },0);\r\n  }\r\n\r\n\r\n  render() {\r\n    const { dimenssion, aggregation, measure } = this.state;\r\n    const { dimenssions,measures } = this.props;\r\n    return (\r\n      <Fragment key=\"graphify-filter\">\r\n        <div className=\"control-item\" style={{ margin: '20px 0' }}>\r\n          <label style={label}>Dimension</label>\r\n          <Select\r\n            name=\"dimenssion\"\r\n            value={dimenssion}\r\n            isSearchable={true}\r\n            onChange={(e) => this.handleChange(e, 'dimenssion')}\r\n            options={dimenssions}\r\n          />\r\n        </div>\r\n        <div className=\"control-item\" style={{ margin: '20px 0' }}>\r\n          <label style={label}>Aggregation</label>\r\n          <Select\r\n            name=\"aggregation\"\r\n            value={aggregation}\r\n            onChange={(e) => this.handleChange(e, 'aggregation')}\r\n            options={aggregations}\r\n          />\r\n        </div>\r\n        <div className=\"control-item\" style={{ margin: '20px 0' }}>\r\n          <label style={label}>Measure</label>\r\n          <Select\r\n            name=\"measure\"\r\n            value={measure}\r\n            onChange={(e) => this.handleChange(e, 'measure')}\r\n            options={measures}\r\n          />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Filter;\r\n","import React from 'react';\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap';\r\n\r\nimport './Header.css';\r\n\r\nclass AppHeader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"header-top\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <a href=\"logo\" className=\"logo-img text-white\" >Gaphify\r\n            </a>\r\n              </div>\r\n              <div className=\"col-md-8 d-flex align-items-center justify-content-end\">\r\n                <ul className=\"top no-style-list d-flex mb-0 \">\r\n                  <li>\r\n                    <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"documentation  text-white text-uppercase font-weight-bold\">\r\n                    <i className=\"custom-color fa fa-clone mr-2\" aria-hidden=\"true\"></i>\r\n                    Documentation</a></li>\r\n                  <li><a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"Setting text-white text-uppercase\"><i className=\"mr-2 custom-color fa fa-cog\" aria-hidden=\"true\"></i>Settings</a></li>\r\n                  <li className=\"border-icon\"><a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\" className=\" text-white text-uppercase font-weight-bold\">\r\n                    <i className=\"icon-bell fa fa-bell\" aria-hidden=\"true\"></i></a></li>\r\n                  <UncontrolledDropdown nav inNavbar>\r\n                    <DropdownToggle nav caret>\r\n                      option\r\n                </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>\r\n                        Account\r\n                  </DropdownItem>\r\n\r\n               \r\n                      <DropdownItem>\r\n                        Logout\r\n                  </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n\r\n\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n\r\n\r\n\r\n        <header className=\"header-inner\">\r\n          <div className=\"container-fluid\">\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 p-0\">\r\n                <ul className=\"navigation d-inline-flex align-items-center no-style-list m-0 p-0\">\r\n                  <li className=\"workplace text-uppercase\" >All Workspaces</li>\r\n                  <li className=\"ml-5  mt-2 \"><a className=\"selected active  text-uppercase font-weight-bold\" href=\"#\" aria-current=\"page\">Pivot</a></li>\r\n                  <li className=\"ml-5 \"><a className=\"text-uppercase  text-white \" href=\"#\" aria-current=\"page\">Data Resources</a></li>\r\n                  <li className=\"ml-5 \"><a className=\"text-uppercase  text-white \" href=\"#\" aria-current=\"page\">Materilized View</a></li>\r\n                  <li className=\"ml-5 \"><a className=\"text-uppercase  text-white \" href=\"#\" aria-current=\"page\">Outputs</a></li>\r\n                  <li className=\"ml-5 \"><a className=\"text-uppercase  text-white \" href=\"#\" aria-current=\"page\">Clusters</a></li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n        </header>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './DatasourceInfo.css';\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap';\r\n\r\n\r\nclass DatasourceInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"datasource\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <h1><span>Twitter Datasoure</span></h1>\r\n                <p> <a href=\"#\"\r\n                  target=\"_blank\" rel=\"noopener noreferrer\">Learn more about Data Source Discovery.</a></p>\r\n              </div><div className=\"col-md-8\">\r\n                <ul className=\"definition-list no-style-list d-flex align-items-center justify-content-end\">\r\n                  <li><strong><span>Cluster</span></strong><span className=\"limited\">Running</span></li>\r\n                  <li><strong>Total Events</strong><span>70</span></li>\r\n                  <li><strong>Parse Errors</strong><span>0</span></li>\r\n                  <UncontrolledDropdown inNavbar>\r\n                    <DropdownToggle nav caret>\r\n                      Add output\r\n                </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>\r\n                        Add Dashboard\r\n                  </DropdownItem>\r\n                      <DropdownItem>\r\n                        Add Materialized View\r\n                  </DropdownItem>\r\n                      <DropdownItem>\r\n                        Archive Data Source\r\n                  </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr></hr>\r\n        <ul className=\"tabs-react no-style-list mb-3 p-0\">\r\n          <li><a>Schema</a></li>\r\n          <li><a>Samples</a></li>\r\n          <li><a>Parse Errors</a></li>\r\n          <li><a>Properties</a></li>\r\n          <li><a>Used By (0)</a></li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatasourceInfo;","/* global Plotly:true */\n\nimport React from 'react';\n\nimport AsyncSelect from 'react-select/lib/Async';\nimport SplitPane from 'react-split-pane';\nimport Filter from './components/filter/Filter.js';\n\n//import createPlotlyComponent from 'react-plotly.js/factory'\nimport Plot from 'react-plotly.js';\nimport './App.css';\nimport './styles/Resizer.css';\n\n\n/* JSON Editor styling */\nimport './styles/autocomplete.css';\nimport './styles/contextmenu.css';\nimport './styles/jsoneditor.css';\nimport './styles/menu.css';\nimport './styles/reset.css';\nimport './styles/searchbox.css';\nimport AppHeader from './components/header/Header.js';\nimport DatasourceInfo from './components/datasourceInfo/DatasourceInfo.js';\nimport { isNumber, isString } from 'lodash';\n\n\n\n//const Plot = createPlotlyComponent(Plotly);\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleJsonChange = this.handleJsonChange.bind(this);\n    this.state = {\n      json: null,\n      plotUrl: '',\n      dimenssions: [],\n      measures: []\n    };\n    this.loadCsv('./data/india.csv');\n  }\n\n  handleJsonChange = newJSON => {\n    this.setState({ json: newJSON });\n  }\n\n  loadCsv(path) {\n    Plotly.d3.csv(path, (err, rows) => {\n      if (err) {\n        console.log(`Datasource CS file ${path} has not loaded`, err);\n        return;\n      }\n\n      let dimenssions = [];\n      let measures = [];\n      const object = rows[0];\n      for (const key in object) {\n        if (object.hasOwnProperty(key)) {\n          const element = object[key];\n          if (isNaN(parseInt(element))) {\n            dimenssions.push(key);\n          } else {\n            measures.push(key);\n          }\n        }\n      }\n      dimenssions = dimenssions.map((o) => {\n        return {\n          label: o,\n          value: o\n        };\n      });\n      measures = measures.map((o) => {\n        return {\n          label: o,\n          value: o\n        };\n      });\n\n      console.log(dimenssions, measures);\n      console.log(`Datasource CS file ${path} has loaded`, rows[0]);\n      const unpack = (rows, key) => {\n        return rows.map(function (row) { return row[key]; });\n      };\n      const trace1 = {\n        type: \"scatter\",\n        mode: \"lines\",\n        name: 'User status count',\n        x: unpack(rows, 'time_date_string'),\n        y: unpack(rows, 'user.statuses_count'),\n        line: { color: '#17BECF' }\n      }\n      const trace2 = {\n        type: \"scatter\",\n        mode: \"lines\",\n        name: 'User friends Count',\n        x: unpack(rows, 'time_date_string'),\n        y: unpack(rows, 'user_friends_count'),\n        line: { color: '#7F7F7F' }\n      }\n      const data = [trace1, trace2];\n      const layout = {\n        title: 'Basic Time Series',\n        xaxis: {\n          rangeselector: {\n            buttons: [\n              {\n                count: 15,\n                label: '15min',\n                step: 'minute',\n                stepmode: 'backward'\n              },\n              {\n                count: 30,\n                label: '30min',\n                step: 'minute',\n                stepmode: 'backward'\n              },\n              {\n                count: 45,\n                label: '45min',\n                step: 'minute',\n                stepmode: 'backward'\n              },\n              {\n                count: 1,\n                label: '1h',\n                step: 'hour',\n                stepmode: 'backward'\n              },\n              {\n                count: 1,\n                label: '1d',\n                step: 'day',\n                stepmode: 'backward'\n              },\n              {\n                count: 1,\n                label: '1m',\n                step: 'month',\n                stepmode: 'backward'\n              },\n              {\n                count: 6,\n                label: '6m',\n                step: 'month',\n                stepmode: 'backward'\n              },\n              {\n                count: 1,\n                label: '1y',\n                step: 'year',\n                stepmode: 'backward'\n              },\n              { step: 'all' }\n            ]\n          },\n          title: 'Time Series',\n          type: 'date'\n        }\n      };\n\n      //Plotly.newPlot('myDiv', data, layout, { showSendToCloud: true });\n\n      const plotJSON = {\n        data: data,\n        layout: layout\n      };\n\n      this.setState({\n        json: plotJSON,\n        dimenssions: dimenssions,\n        measures: measures\n      });\n    });\n\n  }\n\n  onFilterChange(filters) {\n    console.log('filters', filters);\n  }\n\n\n  render() {\n    let searchPlaceholder = 'Search charts on plot.ly by topic -- e.g. \"GDP\"';\n    const plotInputPlaceholder = 'Link to plot JSON';\n\n    return (\n      <div className=\"App\">\n        <AppHeader></AppHeader>\n        <div className=\"container-fluid\">\n          <DatasourceInfo></DatasourceInfo>\n          <SplitPane split=\"vertical\" minSize={100} defaultSize={400}>\n            <div>\n              <div className='controls-panel'>\n                <h1>Filters</h1>\n                <Filter dimenssions={this.state.dimenssions} measures={this.state.measures} onFilterChange={this.onFilterChange} />\n              </div>\n            </div>\n            <div>\n              <div className='controls-panel'>\n                <AsyncSelect\n                  name=\"plot-search-bar\"\n                  loadOptions={this.getPlots}\n                  placeholder={searchPlaceholder}\n                  onChange={this.handleNewPlot}\n                  ref=\"plotSearchBar\"\n                  cache={false}\n                  className={'no-select'}\n                />\n\n              </div>\n              {this.state.json && <Plot\n                data={this.state.json.data}\n                layout={this.state.json.layout}\n                config={{ displayModeBar: true, responsive: true }}\n                style={{ width: '100%' }}\n              />}\n            </div>\n          </SplitPane>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}